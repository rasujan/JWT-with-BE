{"ast":null,"code":"var _jsxFileName = \"/home/sujan/Development/JWT-Project/food-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null); // GET\n\n  const getFoods = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${apiUrl}/foods`);\n      setFoods(data);\n      setFetchError(null);\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getFoods(),\n        children: \"Get Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: foods.map((food, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: food.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: fetchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"tLmZIbsGFigPP8fY6CapR5IZE28=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sujan/Development/JWT-Project/food-app/src/App.js"],"names":["React","useState","Routes","Route","Link","App","foods","setFoods","fetchError","setFetchError","getFoods","data","axios","get","apiUrl","err","message","map","food","i","description","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,kBAApC;AAEA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C,CAFa,CAIb;;AACA,QAAMS,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMC,KAAK,CAACC,GAAN,CAAW,GAAEC,MAAO,QAApB,CAAvB;AAEAP,MAAAA,QAAQ,CAACI,IAAD,CAAR;AAEAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAND,CAME,OAAOM,GAAP,EAAY;AACZN,MAAAA,aAAa,CAACM,GAAG,CAACC,OAAL,CAAb;AACD;AACF,GAVD;;AAYA,sBACE;AAAA,2BAIE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMN,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,kBACGJ,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAHF,EASGZ,UAAU,iBAAI;AAAG,QAAA,KAAK,EAAE;AAAEa,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA,kBAA6Bb;AAA7B;AAAA;AAAA;AAAA;AAAA,cATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF,mBADF;AAkBD;;GAnCQH,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n\n  // GET\n  const getFoods = async () => {\n    try {\n      const { data } = await axios.get(`${apiUrl}/foods`);\n\n      setFoods(data);\n\n      setFetchError(null);\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return (\n    <>\n      {/* This section should only if the user is  */}\n\n      {/* This section should only be displayed if logged in */}\n      <section>\n        <button onClick={() => getFoods()}>Get Foods</button>\n\n        <ul>\n          {foods.map((food, i) => (\n            <li>{food.description}</li>\n          ))}\n        </ul>\n\n        {fetchError && <p style={{ color: \"red\" }}>{fetchError}</p>}\n      </section>\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/sujan/Development/JWT-Project/food-app/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"src/utils/baseURL\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null); // GET\n\n  const getFoods = async () => {\n    try {\n      const {\n        status,\n        data\n      } = await axios.get(`/foods`);\n      setFoods(data);\n      setFetchError(null);\n\n      if (status === 401) {}\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getFoods(),\n        children: \"Get Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: foods.map((food, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: food.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: fetchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"fVuSA/whKH0TMfHtT0Gi3qdEO+Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/sujan/Development/JWT-Project/food-app/src/pages/Home.js"],"names":["React","useState","useNavigate","axios","Home","navigate","foods","setFoods","fetchError","setFetchError","getFoods","status","data","get","err","message","map","food","i","description","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C,CAHiB,CAKjB;;AACA,QAAMS,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmB,MAAMT,KAAK,CAACU,GAAN,CAAW,QAAX,CAA/B;AAEAN,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACAH,MAAAA,aAAa,CAAC,IAAD,CAAb;;AAEA,UAAIE,MAAM,KAAK,GAAf,EAAoB,CACnB;AACF,KARD,CAQE,OAAOG,GAAP,EAAY;AACZL,MAAAA,aAAa,CAACK,GAAG,CAACC,OAAL,CAAb;AACD;AACF,GAZD;;AAcA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAML,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,kBACGJ,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAHF,EASGX,UAAU,iBAAI;AAAG,QAAA,KAAK,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA,kBAA6BZ;AAA7B;AAAA;AAAA;AAAA;AAAA,cATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD,CAnCD;;GAAMJ,I;UACaF,W;;;KADbE,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport axios from \"src/utils/baseURL\";\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n\n  // GET\n  const getFoods = async () => {\n    try {\n      const { status, data } = await axios.get(`/foods`);\n\n      setFoods(data);\n      setFetchError(null);\n\n      if (status === 401) {\n      }\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <section>\n        <button onClick={() => getFoods()}>Get Foods</button>\n\n        <ul>\n          {foods.map((food, i) => (\n            <li>{food.description}</li>\n          ))}\n        </ul>\n\n        {fetchError && <p style={{ color: \"red\" }}>{fetchError}</p>}\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}